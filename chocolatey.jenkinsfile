pipeline {
    agent any
    
    environment {
        ANSIBLE_HOST_KEY_CHECKING = 'False'
        ANSIBLE_FORKS = '2'
        ANSIBLE_CONFIG = '/tmp/ansibleJenkins/ansible/ansible.cfg'
    }
    
    parameters {
        choice(
            name: 'TARGET_SERVER',
            choices: [
                'Windows',
                'ServerVM1', 
                'RaspberryPi2',
                'ReverseProxy',
                'Linux'
            ],
            description: 'Serveur cible pour le d√©ploiement'
        )
        choice(
            name: 'PACKAGE_ACTION',
            choices: ['install', 'uninstall', 'upgrade'],
            description: 'Action √† effectuer sur le package Chocolatey'
        )
        string(
            name: 'PACKAGE_NAME',
            defaultValue: '',
            description: 'Nom du package √† installer/d√©sinstaller (ex: googlechrome, firefox, git)'
        )
        string(
            name: 'PACKAGE_VERSION',
            defaultValue: '',
            description: 'Version sp√©cifique du package (optionnel - laisser vide pour la derni√®re version)'
        )
        choice(
            name: 'PACKAGE_STATE',
            choices: ['present', 'absent', 'latest'],
            description: '√âtat souhait√© du package'
        )
        booleanParam(
            name: 'FORCE_INSTALL',
            defaultValue: false,
            description: 'Forcer l\'installation m√™me si le package existe d√©j√†'
        )
        string(
            name: 'CHOCOLATEY_SOURCE',
            defaultValue: 'https://chocolatey.org/api/v2/',
            description: 'Source Chocolatey (repository URL)'
        )
        choice(
            name: 'CHOCOLATEY_TIMEOUT',
            choices: ['1800', '3600', '7200', '10800'],
            description: 'Timeout en secondes (1800=30min, 3600=1h, 7200=2h, 10800=3h)'
        )
        text(
            name: 'PACKAGE_PARAMS',
            defaultValue: '',
            description: 'Param√®tres suppl√©mentaires pour l\'installation (ex: /InstallDir=C:\\MyApp /NoDesktopIcon)'
        )
        text(
            name: 'EXTRA_VARS',
            defaultValue: '',
            description: 'Variables Ansible suppl√©mentaires (format: key=value s√©par√©es par des espaces)'
        )
    }
    
    stages {
        stage('Validation des Param√®tres') {
            steps {
                script {
                    echo "üîç Validation des param√®tres Chocolatey..."
                    
                    // Validation du nom du package
                    if (params.PACKAGE_NAME.trim() == '') {
                        error("Le nom du package est obligatoire!")
                    }
                    
                    // Validation du serveur Windows
                    if (!params.TARGET_SERVER.toLowerCase().contains('windows') && 
                        !params.TARGET_SERVER.contains('all-windows') && 
                        !params.TARGET_SERVER.contains('all-servers')) {
                        echo "Attention: Chocolatey ne fonctionne que sur Windows. Serveur s√©lectionn√©: ${params.TARGET_SERVER}"
                    }
                    
                    // D√©terminer le playbook
                    env.SELECTED_PLAYBOOK = 'deploy_package_windows_chocolatey.yml'
                    
                    echo "R√©sum√© des param√®tres:"
                    echo "   ‚Ä¢ Package: ${params.PACKAGE_NAME}"
                    echo "   ‚Ä¢ Version: ${params.PACKAGE_VERSION ?: 'Latest'}"
                    echo "   ‚Ä¢ Action: ${params.PACKAGE_STATE}"
                    echo "   ‚Ä¢ Serveur: ${params.TARGET_SERVER}"
                    echo "   ‚Ä¢ Force: ${params.FORCE_INSTALL}"
                    echo "   ‚Ä¢ Source: ${params.CHOCOLATEY_SOURCE}"
                    echo "   ‚Ä¢ Timeout: ${params.CHOCOLATEY_TIMEOUT}s"
                    echo "   ‚Ä¢ Playbook: ${env.SELECTED_PLAYBOOK}"
                }
            }
        }
        
        stage('Pr√©paration des Variables Ansible') {
            steps {
                script {
                    echo "Pr√©paration des variables pour Ansible..."
                    
                    // Construire les variables Ansible
                    def ansibleVars = []
                    
                    // Variables obligatoires
                    ansibleVars << "package_name=${params.PACKAGE_NAME}"
                    ansibleVars << "package_state=${env.FINAL_PACKAGE_STATE}"
                    ansibleVars << "force_install=${params.FORCE_INSTALL}"
                    ansibleVars << "chocolatey_source=${params.CHOCOLATEY_SOURCE}"
                    ansibleVars << "chocolatey_timeout=${params.CHOCOLATEY_TIMEOUT}"
                    
                    // Variables optionnelles
                    if (params.PACKAGE_VERSION.trim() != '') {
                        ansibleVars << "package_version=${params.PACKAGE_VERSION}"
                    }
                    
                    if (params.PACKAGE_PARAMS.trim() != '') {
                        // √âchapper les param√®tres pour Ansible
                        def escapedParams = params.PACKAGE_PARAMS.replaceAll('"', '\\\\"')
                        ansibleVars << "package_params=\"${escapedParams}\""
                    }
                    
                    // Variables suppl√©mentaires de l'utilisateur
                    if (params.EXTRA_VARS.trim() != '') {
                        ansibleVars << params.EXTRA_VARS
                    }
                    
                    // Stocker les variables format√©es
                    env.ANSIBLE_EXTRA_VARS = ansibleVars.join(' ')
                    
                    echo "üîß Variables Ansible g√©n√©r√©es:"
                    echo "${env.ANSIBLE_EXTRA_VARS}"
                }
            }
        }
        
        stage('V√©rification Ansible') {
            steps {
                script {
                    // V√©rifier qu'Ansible est install√©
                    sh 'ansible --version'
                    
                    // V√©rifier que le playbook existe
                    sh """
                        if [ ! -f "/tmp/ansibleJenkins/ansible/playbook/${env.SELECTED_PLAYBOOK}" ]; then
                            echo "Playbook ${env.SELECTED_PLAYBOOK} non trouv√©!"
                            echo "Contenu du r√©pertoire playbook:"
                            ls -la /tmp/ansibleJenkins/ansible/playbook/ || echo "R√©pertoire non trouv√©"
                            exit 1
                        fi
                        
                        echo "Playbook ${env.SELECTED_PLAYBOOK} trouv√©"
                        
                        # V√©rifier la syntaxe du playbook
                        #ansible-playbook --syntax-check /tmp/ansibleJenkins/ansible/playbook/${env.SELECTED_PLAYBOOK}
                    """
                }
            }
        }
        
        stage('Ex√©cution Chocolatey Package Manager') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'ssh-key-ansible-user-secret-file', variable: 'SSH_PRIVATE_KEY_FILE')]) {
                        sh '''
                            chmod 600 $SSH_PRIVATE_KEY_FILE
                            
                            echo "D√©marrage de la gestion du package Chocolatey..."
                            echo "Package: ''' + params.PACKAGE_NAME + '''"
                            echo "Action: ''' + params.PACKAGE_STATE + '''"
                            echo "Serveur: ''' + params.TARGET_SERVER + '''"
                            
                            # Ex√©cuter le playbook Ansible
                            ansible-playbook -i /tmp/ansibleJenkins/ansible/inventory/hosts.ini /tmp/ansibleJenkins/ansible/playbook/${SELECTED_PLAYBOOK} -e HOST=${TARGET_SERVER} -e package_name=${PACKAGE_NAME} -e package_version=${PACKAGE_VERSION} -e package_state=${PACKAGE_STATE} -e force_install=${FORCE_INSTALL}
                        '''
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo "Gestion des packages Chocolatey termin√©e"
            
            // Cr√©er un rapport d√©taill√©
            script {
                def report = """
                === RAPPORT CHOCOLATEY PACKAGE MANAGER ===
                Package: ${params.PACKAGE_NAME}
                Version: ${params.PACKAGE_VERSION ?: 'Latest'}
                √âtat Final: ${env.FINAL_PACKAGE_STATE ?: 'Non d√©fini'}
                Serveur Cible: ${params.TARGET_SERVER}
                Force Installation: ${params.FORCE_INSTALL}
                Source Chocolatey: ${params.CHOCOLATEY_SOURCE}
                Timeout: ${params.CHOCOLATEY_TIMEOUT} secondes
                Param√®tres Package: ${params.PACKAGE_PARAMS ?: 'Aucun'}
                Variables Extra: ${params.EXTRA_VARS ?: 'Aucune'}
                Variables Ansible: ${env.ANSIBLE_EXTRA_VARS ?: 'Non g√©n√©r√©es'}
                Playbook: ${env.SELECTED_PLAYBOOK ?: 'Non d√©fini'}
                Build: #${env.BUILD_NUMBER}
                Date: ${new Date().format('yyyy-MM-dd HH:mm:ss')}
                Statut: ${currentBuild.currentResult}
                ==========================================
                """
                writeFile file: 'chocolatey_package_report.txt', text: report
                archiveArtifacts artifacts: 'chocolatey_package_report.txt', allowEmptyArchive: true
            }
        }
        success {
            script {
                echo "Package '${params.PACKAGE_NAME}' ${params.PACKAGE_STATE} avec succ√®s!"
                
                currentBuild.description = "${params.PACKAGE_STATE} ${params.PACKAGE_NAME} ‚Üí ${params.TARGET_SERVER}"
                
                emailext (
                    subject: "[Jenkins] Chocolatey ${params.PACKAGE_STATE} - ${params.PACKAGE_NAME} - Succ√®s",
                    body: """
                    <div style="background: #d4edda; padding: 15px; border-radius: 5px; border-left: 4px solid #28a745;">
                        <h2 style="color: #155724; margin-top: 0;">üç´ Package Chocolatey g√©r√© avec succ√®s</h2>
                        
                        <table style="width: 100%; border-collapse: collapse; margin: 15px 0;">
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>Package</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">${params.PACKAGE_NAME}</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>Version</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">${params.PACKAGE_VERSION ?: 'Latest'}</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>Action</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">${params.PACKAGE_STATE}</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>Serveur</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">${params.TARGET_SERVER}</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>√âtat Final</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">${env.FINAL_PACKAGE_STATE}</td>
                            </tr>
                            <tr>
                                <td style="padding: 8px; border: 1px solid #c3e6cb; background: #f8f9fa;"><strong>Build</strong></td>
                                <td style="padding: 8px; border: 1px solid #c3e6cb;">#${env.BUILD_NUMBER}</td>
                            </tr>
                        </table>
                        
                        <p><a href="${env.BUILD_URL}" style="background: #28a745; color: white; padding: 10px 15px; text-decoration: none; border-radius: 4px;">üìä Voir les d√©tails du build</a></p>
                    </div>
                    """,
                    mimeType: 'text/html',
                    to: 'l.kieran95@gmail.com'
                )
            }
        }
        failure {
            script {
                echo "√âchec de la gestion du package '${params.PACKAGE_NAME}'"
                
                currentBuild.description = "${params.PACKAGE_STATE} ${params.PACKAGE_NAME} ‚Üí √âCHEC"
                
                emailext (
                    subject: "[Jenkins] Chocolatey - √âchec - ${params.PACKAGE_NAME}",
                    body: """
                    <div style="background: #f8d7da; padding: 15px; border-radius: 5px; border-left: 4px solid #dc3545;">
                        <h2 style="color: #721c24; margin-top: 0;">√âchec de la gestion du package Chocolatey</h2>
                        
                        <p><strong>Package:</strong> ${params.PACKAGE_NAME}</p>
                        <p><strong>Action:</strong> ${params.PACKAGE_STATE}</p>
                        <p><strong>Serveur:</strong> ${params.TARGET_SERVER}</p>
                        <p><strong>Build:</strong> #${env.BUILD_NUMBER}</p>
                        
                        <h3>Variables utilis√©es:</h3>
                        <pre style="background: #f8f9fa; padding: 10px; border-radius: 4px;">${env.ANSIBLE_EXTRA_VARS ?: 'Non g√©n√©r√©es'}</pre>
                        
                        <p><a href="${env.BUILD_URL}console" style="background: #dc3545; color: white; padding: 10px 15px; text-decoration: none; border-radius: 4px;">üîç Voir les logs d'erreur</a></p>
                    </div>
                    """,
                    mimeType: 'text/html',
                    to: 'l.kieran95@gmail.com',
                    attachLog: true
                )
            }
        }
        cleanup {
            cleanWs()
        }
    }
}