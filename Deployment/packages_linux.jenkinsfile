pipeline {
    agent any
    
    environment {
        ANSIBLE_HOST_KEY_CHECKING = 'False'
        ANSIBLE_FORKS = '2'
        ANSIBLE_CONFIG = '/tmp/ansibleJenkins/ansible/ansible.cfg'
    }
    
    parameters {
        choice(
            name: 'TARGET_SERVER',
            choices: [
                'ServerVM1', 
                'RaspberryPi2',
                'ReverseProxy',
                'Linux'
            ],
            description: 'Target server for deployment'
        )
    }
    
    stages {
        stage('V√©rification Ansible') {
            steps {
                script {
                    // V√©rifier qu'Ansible est install√©
                    sh 'ansible --version'
                    
                    // V√©rifier la syntaxe du playbook
                    // sh "ansible-playbook --syntax-check -i /tmp/ansibleJenkins/ansible/inventory/hosts.ini /tmp/ansibleJenkins/ansible/playbook/update_system_linux.yml"
                }
            }
        }
        
        stage('Ex√©cution du Playbook') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'ssh-key-ansible-user-secret-file', variable: 'SSH_KEY_FILE')]) {
                        sh '''
                            ansible-playbook -i /tmp/ansibleJenkins/ansible/inventory/hosts.ini /tmp/ansibleJenkins/ansible/playbook/update_system_linux.yml -e HOST=${TARGET_SERVER}
                        '''
                    }
                }
            }
        }
    }
    
post {
    always {
        echo "Mise √† jour syst√®me termin√©e"
        
        // Cr√©er un rapport d√©taill√©
        script {
            def report = """
            === RAPPORT DE MISE √Ä JOUR SYST√àME ===
            Serveur Cible: ${params.TARGET_SERVER}
            Playbook: update_system_linux.yml
            Inventaire: /tmp/ansibleJenkins/ansible/inventory/hosts.ini
            Build: #${env.BUILD_NUMBER}
            Date: ${new Date().format('yyyy-MM-dd HH:mm:ss')}
            Statut: ${currentBuild.currentResult}
            Dur√©e: ${currentBuild.durationString ?: 'N/A'}
            ==========================================
            """
            writeFile file: 'system_update_report.txt', text: report
            archiveArtifacts artifacts: 'system_update_report.txt', allowEmptyArchive: true
        }
    }
    success {
        script {
            echo "Mise √† jour syst√®me r√©ussie sur '${params.TARGET_SERVER}'"
            
            currentBuild.description = "Mise √† jour syst√®me ‚Üí ${params.TARGET_SERVER}"
            
            // Cr√©er le corps de l'email en texte avec formatage
            def emailBody = """
                üöÄ MISE √Ä JOUR SYST√àME - SUCC√àS

                Serveur: ${params.TARGET_SERVER}
                Playbook: update_system_linux.yml
                Build: #${env.BUILD_NUMBER}
                Date: ${new Date().format('yyyy-MM-dd HH:mm:ss')}
                Dur√©e: ${currentBuild.durationString ?: 'N/A'}

                üìä D√©tails du build: ${env.BUILD_URL}

                Configuration utilis√©e:
                - Inventaire: /tmp/ansibleJenkins/ansible/inventory/hosts.ini
                - Type d'op√©ration: Mise √† jour syst√®me compl√®te

                ‚úÖ La mise √† jour syst√®me s'est termin√©e avec succ√®s.
            """
            
            mail to: 'l.kieran95@gmail.com',
                subject: "[Jenkins] Mise √† jour syst√®me - ${params.TARGET_SERVER} - Succ√®s",
                body: emailBody
        }
    }
    failure {
        script {
            echo "√âchec de la mise √† jour syst√®me sur '${params.TARGET_SERVER}'"
            
            currentBuild.description = "Mise √† jour syst√®me ‚Üí √âCHEC"
            
            // Cr√©er le corps de l'email d'√©chec
            def emailBody = """
                ‚ùå MISE √Ä JOUR SYST√àME - √âCHEC

                Serveur: ${params.TARGET_SERVER}
                Playbook: update_system_linux.yml
                Build: #${env.BUILD_NUMBER}
                Date: ${new Date().format('yyyy-MM-dd HH:mm:ss')}

                üîç Logs d'erreur: ${env.BUILD_URL}console

                Configuration utilis√©e:
                - Inventaire: /tmp/ansibleJenkins/ansible/inventory/hosts.ini
                - Type d'op√©ration: Mise √† jour syst√®me compl√®te

                ‚ö†Ô∏è Veuillez v√©rifier les logs pour plus de d√©tails.
            """
            
            mail to: 'l.kieran95@gmail.com',
                subject: "[Jenkins] Mise √† jour syst√®me - √âchec - ${params.TARGET_SERVER}",
                body: emailBody
        }
    }
    cleanup {
        cleanWs()
    }
}