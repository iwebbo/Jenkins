pipeline {
    agent any
    
    environment {
        // Variables d'environnement Ansible
        ANSIBLE_HOST_KEY_CHECKING = 'False'
        ANSIBLE_FORKS = '2'  // Optimisé pour Raspberry Pi
    }
    
    parameters {
        string(
            name: 'EXTRA_VARS',
            defaultValue: '',
            description: 'Variables supplémentaires (format: var1=value1 var2=value2)'
        )
    }
    
    stages {
        stage('Vérification Ansible') {
            steps {
                script {
                    // Vérifier qu'Ansible est installé
                    sh 'ansible --version'
                    
                    // Vérifier la syntaxe du playbook
                    // sh "ansible-playbook --syntax-check site.yml"
                }
            }
        }
        
        stage('Exécution du Playbook') {
            steps {
                script {
                    def extraVarsFlag = params.EXTRA_VARS ? "--extra-vars '${params.EXTRA_VARS}'" : ""
                    
                    withCredentials([file(credentialsId: 'ssh-key-ansible-user-secret-file', variable: 'SSH_KEY_FILE')]) {
                        // Utiliser writeFile et des variables d'environnement pour éviter l'interpolation
                        sh '''
                            ansible-playbook -i /tmp/ansibleJenkins/ansible/inventory/hosts.ini /tmp/ansibleJenkins/ansible/playbook/update_system_linux.yml
                        '''
                    }
                }
            }
        }
    }
    
    post {
        success {
            mail to: 'l.kieran95@gmail.com',
                subject: "Success - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "Upgrade done.\n\nVoir: ${env.BUILD_URL}"
        }
        failure {
            mail to: 'l.kieran95@gmail.com',
                subject: "Issue - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "Upgrade issue.\n\nVoir les logs: ${env.BUILD_URL}console"
        }
    }
}